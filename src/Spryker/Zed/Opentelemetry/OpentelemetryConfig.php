<?php

/**
 * Copyright Â© 2016-present Spryker Systems GmbH. All rights reserved.
 * Use of this software requires acceptance of the Evaluation License Agreement. See LICENSE file.
 */

namespace Spryker\Zed\Opentelemetry;

use Spryker\Shared\Config\Config;
use Spryker\Shared\Opentelemetry\OpentelemetryConfig as SharedOpentelemetryConfig;
use Spryker\Zed\Kernel\AbstractBundleConfig;

class OpentelemetryConfig extends AbstractBundleConfig
{
    /**
     * Specification:
     * - Returns the list of modules that should be excluded from instrumentation.
     *
     * @api
     *
     * @return array<string>
     */
    public function getExcludedDirs(): array
    {
        return [
            'Monitoring',
            'Opentelemetry',
            'OpenTelemetry',
            'Dependency',
            'Acl',
            'Gui',
            'GracefulRunner',
            'AclEntity',
            'Container',
            'Transfer',
            'Kernel',
            'Application',
            'Installer',
            'Console',
            'Config',
            'Queue',
            'PropelReplicationCache',
            'GitHook',
            'ArchitectureSniffer',
            'Router',
            'ZedNavigation',
            'Acl',
            'Twig',
            'WebProfiler',
            'Translator',
            'Money',
            'Locale',
            'Navigation',
            'Touch',
            'Collector',
            'NavigationGui',
            'Store',
            'Log',
            'Profiler',
            'Propel',
            'PropelOrm',
            'PropelQueryBuilder',
            'RabbitMq',
            'Redis',
            'Session',
            'SessionFile',
            'SessionRedis',
            'SessionUserValidation',
            'Testify',
            'Validation',
            'Development',
            'ErrorHandler',
            'Glossary',
            'GuiTable',
            'ModuleFinder',
            'Monitoring',
            'Search',
            'SearchElasticsearch',
            'SearchElasticsearchGui',
            'Silex',
            'SearchHttp',
            'Storage',
            'StorageRedis',
            'StorageDatabase',
            'StoreContext',
            'Symfony',
            'Security',
            'SecurityGui',
            'SecurityBlockerBackofficeGui',
            'SecurityBlockerMerchantPortalGui',
            'AgentSecurityMerchantPortalGui',
            'SecurityMerchantPortalGui',
            'Http',
            'SecuritySystemUser',
            'SecurityOauthUser',
            'UserLocale',
            'AclMerchantAgent',
            'Merchant',
            'MerchantStock',
            'MerchantProfile',
            'MerchantGui',
            'MerchantUser',
            'MerchantCategory',
            'ZedUi',
            'templates',
            'config',
            'tests',
        ];
    }

    /**
     * Specification:
     * - List of Span names (Module-Class::method) that should be excluded from generated hooks.
     * - Most of the list are spans that are proven fast and will be skipped from the result in any case.
     *
     * @api
     *
     * @return array
     */
    public function getExcludedSpans(): array
    {
        return [
            'AgentPage-AgentSecurityOptionsBuilder::buildOptions',
            'AgentPage-AgentTokenAfterCustomerAuthenticationSuccessUpdater::execute',
            'AgentPage-AgentUserProvider::refreshUser',
            'AgentPage-LoginCheckUrlFormatter::getLoginCheckPath',
            'AgentPage-SecurityBuilderExpander::extend',
            'AgentPage-SwitchUserEventSubscriber::getSubscribedEvents',
            'AgentWidget-AgentControlBarWidget::getName',
            'AgentWidget-AgentControlBarWidget::getTemplate',
            'AssetWidget-AssetWidget::getName',
            'AssetWidget-AssetWidget::getTemplate',
            'AssetWidget-AssetWidgetDataProvider::getSlotContent',
            'AvailabilityNotification-AvailabilityNotificationSubscriber::getSubscribedEvents',
            'AvailabilityNotification-AvailabilityNotificationSubscriptionReader::getAvailabilityNotifications',
            'AvailabilityNotification-CustomerExpander::expandCustomerTransferWithAvailabilityNotificationSubscriptionList',
            'AvailabilityNotificationWidget-AvailabilityNotificationSubscriptionWidget::getName',
            'AvailabilityStorage-AvailabilityStorageEventSubscriber::getSubscribedEvents',
            'BarcodeWidget-BarcodeWidget::getName',
            'BusinessOnBehalf-BusinessOnBehalfFacade::setDefaultCompanyUserToCustomer',
            'BusinessOnBehalf-CustomerExpander::expandCustomer',
            'BusinessOnBehalf-CustomerHydrator::hydrateCustomerWithCompanyUser',
            'BusinessOnBehalfGui-CustomerTableButtonCreator::addAttachCustomerToCompanyButton',
            'BusinessOnBehalfWidget-BusinessOnBehalfStatusWidget::getName',
            'BusinessOnBehalfWidget-BusinessOnBehalfStatusWidget::getTemplate',
            'Cart-CartFacade::expandItemGroupKeysWithCartIdentifier',
            'Cart-GroupKeyExpander::expandItemGroupKeysWithCartIdentifier',
            'Cart-NonPersistentProvider::addItems',
            'Cart-QuoteCleaner::cleanUpItemGroupKeyPrefix',
            'CartCodeWidget-CartCodeFormWidget::getName',
            'CartCodeWidget-CartCodeFormWidget::getTemplate',
            'CartNote-CartNoteSaver::saveCartNoteToOrder',
            'CartNoteWidget-CartItemNoteFormWidget::getName',
            'CartNoteWidget-CartItemNoteFormWidget::getTemplate',
            'CartNoteWidget-CartNoteFormWidget::getName',
            'CartNoteWidget-CartNoteFormWidget::getTemplate',
            'CartPage-AddItemsFormWidget::getName',
            'CartPage-CartAddProductAsSeparateItemWidget::getName',
            'CartPage-CartAddProductAsSeparateItemWidget::getTemplate',
            'CartPage-CartChangeQuantityFormWidget::getName',
            'CartPage-CartChangeQuantityFormWidget::getTemplate',
            'CartPage-CartSummaryHideTaxAmountWidget::getName',
            'CartPage-CartSummaryHideTaxAmountWidget::getTemplate',
            'CartPage-ProductAbstractAddToCartButtonWidget::getName',
            'CartPage-ProductAbstractAddToCartButtonWidget::getTemplate',
            'CartPage-ProductViewExpander::expandProductViewWithCartData',
            'CartPage-RemoveFromCartFormWidget::getName',
            'CartPage-RemoveFromCartFormWidget::getTemplate',
            'CatalogPage-CategoryNodeWalker::start',
            'CatalogPage-UrlGenerator::generateUrlWithoutActiveSearchFilter',
            'CategoryDiscountConnector-CategoryDecisionRuleChecker::isCategorySatisfiedBy',
            'CategoryDiscountConnector-CategoryDiscountConnectorFacade::getDiscountableItemsByCategory',
            'CategoryDiscountConnector-CategoryDiscountConnectorFacade::isCategorySatisfiedBy',
            'CategoryDiscountConnector-CategoryReader::getCategoryKeysGroupedByIdCategoryNode',
            'CategoryDiscountConnector-DiscountableItemReader::getDiscountableItemsByCategory',
            'CategoryDiscountConnector-ProductCategoryReader::getProductCategoriesGroupedByIdProductAbstract',
            'CategoryImageStorage-CategoryImageStorageEventSubscriber::getSubscribedEvents',
            'CategoryImageStorageWidget-CategoryImageStorageWidget::getName',
            'CheckoutPage-AbstractBaseStep::execute',
            'CheckoutPage-AbstractBaseStep::preCondition',
            'CheckoutPage-AddressStep::requireInput',
            'CheckoutPage-CustomerAddressViewDataExpander::expand',
            'CheckoutPage-CustomerStep::postCondition',
            'CheckoutPage-CustomerStep::requireInput',
            'CheckoutPage-DataContainer::get',
            'CheckoutPage-DataContainer::set',
            'CheckoutPage-GiftCardItemsChecker::hasOnlyGiftCardItems',
            'CheckoutPage-PaymentMethodKeyExtractor::getPaymentSelectionKey',
            'CheckoutPage-PaymentStep::requireInput',
            'CheckoutPage-PlaceOrderStep::postCondition',
            'CheckoutPage-PlaceOrderStep::preCondition',
            'CheckoutPage-PostConditionChecker::check',
            'CheckoutPage-ShipmentStep::postCondition',
            'CheckoutPage-ShipmentStep::requireInput',
            'CheckoutWidget-CheckoutBreadcrumbWidget::getName',
            'CheckoutWidget-CheckoutBreadcrumbWidget::getTemplate',
            'CheckoutWidget-ProceedToCheckoutButtonWidget::getName',
            'CheckoutWidget-ProceedToCheckoutButtonWidget::getTemplate',
            'ClickAndCollectExample-QuoteProductOfferReplacer::replaceQuoteItemProductOffers',
            'ClickAndCollectPageExample-ClickAndCollectServicePointAddressFormWidget::getName',
            'ClickAndCollectPageExample-ClickAndCollectServicePointAddressFormWidget::getTemplate',
            'Cms-CmsPageUrlBuilder::getPageUrlPrefix',
            'Cms-TemplateContentReader::getTemplateContent',
            'Cms-TemplatePlaceholderParser::getTemplatePlaceholders',
            'CmsBlockCategoryStorage-CmsBlockCategoryStorageEventSubscriber::getSubscribedEvents',
            'CmsBlockProductStorage-CmsBlockProductStorageEventSubscriber::getSubscribedEvents',
            'CmsBlockStorage-CmsBlockStorageEventSubscriber::getSubscribedEvents',
            'CmsBlockWidget-CmsBlockValidator::isValid',
            'CmsContentWidgetProductConnector-CmsProductGroupContentWidgetConfigurationProvider::getAvailableTemplates',
            'CmsContentWidgetProductConnector-CmsProductGroupContentWidgetConfigurationProvider::getFunctionName',
            'CmsPageSearch-CmsPageSearchEventSubscriber::getSubscribedEvents',
            'CmsSlotBlockStorage-CmsSlotBlockStorageEventSubscriber::getSubscribedEvents',
            'CmsSlotBlockWidget-CmsSlotBlockWidgetDataProvider::getSlotContent',
            'CmsSlotStorage-CmsSlotStorageEventSubscriber::getSubscribedEvents',
            'Comment-CommentFacade::findCommentThreadByOwner',
            'Comment-CommentFacade::getCommentThreads',
            'Comment-CommentThreadReader::findCommentThreadByOwner',
            'Comment-CommentThreadReader::getCommentThreads',
            'CommentMerchantRelationshipConnector-CommentMerchantRelationshipConnectorFacade::expandMerchantRelationshipCollectionWithCommentThread',
            'CommentMerchantRelationshipConnector-CommentReader::getCommentThreadsIndexedByOwnerId',
            'CommentMerchantRelationshipConnector-CommentThreadExpander::expandMerchantRelationshipCollection',
            'CommentWidget-CommentThreadExpander::expandCommentsWithPlainTags',
            'CommentWidget-CommentThreadPreparer::prepareTaggedComments',
            'CommentWidget-CommentThreadWidget::getName',
            'CommentWidget-CommentThreadWidget::getTemplate',
            'CompanyBusinessUnit-CompanyBusinessUnitFacade::getCompanyBusinessUnitById',
            'CompanyBusinessUnit-CompanyBusinessUnitPluginExecutor::executeTransferExpanderPlugins',
            'CompanyBusinessUnit-CompanyBusinessUnitReader::getCompanyBusinessUnitById',
            'CompanyBusinessUnitSalesConnector-CompanyBusinessUnitSalesConnectorFacade::isFilterFieldSet',
            'CompanyBusinessUnitSalesConnector-FilterFieldChecker::isFilterFieldSet',
            'CompanyBusinessUnitSalesConnector-OrderWriter::updateOrderCompanyBusinessUnitUuid',
            'CompanyPage-CompanyBusinessUnitAddressReader::getDefaultBillingAddress',
            'CompanyPage-CompanyUnitAddressExpander::expandWithCompanyUnitAddress',
            'CompanyPage-CompanyUserValidator::hasBusinessUnit',
            'CompanyRole-CompanyRoleFacade::findPermissionsByIdCompanyUser',
            'CompanyRole-CompanyRoleFacade::hydrateCompanyUser',
            'CompanySalesConnector-CompanySalesConnectorFacade::isFilterFieldSet',
            'CompanySalesConnector-FilterFieldChecker::isFilterFieldSet',
            'CompanySalesConnector-OrderWriter::updateOrderCompanyUuid',
            'CompanyUnitAddress-CompanyBusinessUnitAddressReader::getCompanyBusinessUnitAddressesByCriteriaFilter',
            'CompanyUnitAddress-CompanyBusinessUnitAddressReader::getCompanyUnitAddressCollectionByCompanyBusinessUnitIds',
            'CompanyUnitAddress-CompanyUnitAddressFacade::expandMerchantRelationshipCollectionWithCompanyUnitAddress',
            'CompanyUnitAddress-CompanyUnitAddressFacade::getCompanyUnitAddressCollection',
            'CompanyUnitAddress-MerchantRelationshipExpander::expandMerchantRelationshipCollectionWithCompanyUnitAddress',
            'CompanyUser-CompanyUserFacade::countActiveCompanyUsersByIdCustomer',
            'CompanyUser-CompanyUserFacade::expandCustomerWithIsActiveCompanyUserExists',
            'CompanyUser-CustomerExpander::expandCustomerWithIsActiveCompanyUserExists',
            'CompanyUserGui-CompanyUserGuiButtonCreator::addAttachCustomerButton',
            'CompanyWidget-AddressProvider::companyBusinessUnitAddressesExists',
            'CompanyWidget-AddressProvider::findCurrentCompanyBusinessUnitAddress',
            'CompanyWidget-AddressProvider::getIndexedCompanyBusinessUnitAddressList',
            'CompanyWidget-AddressProvider::getIndexedCustomerAddressList',
            'CompanyWidget-CompanyMenuItemWidget::getName',
            'CompanyWidget-CompanyMenuItemWidget::getTemplate',
            'ConfigurableBundle-ConfiguredBundleItemCleaner::removeInactiveConfiguredBundleItemsFromQuote',
            'ConfigurableBundleCart-ConfigurableBundleCartFacade::expandConfiguredBundleItemsWithGroupKey',
            'ConfigurableBundleCart-ConfigurableBundleCartFacade::expandConfiguredBundleItemsWithQuantityPerSlot',
            'ConfigurableBundleCart-ConfigurableBundleCartFacade::updateConfiguredBundleQuantityForQuote',
            'ConfigurableBundleCart-ConfigurableBundleCartFacade::updateConfiguredBundleQuantityPerSlotForQuote',
            'ConfigurableBundleCart-ConfiguredBundleGroupKeyExpander::expandConfiguredBundleItemsWithGroupKey',
            'ConfigurableBundleCart-ConfiguredBundleQuantityChecker::checkConfiguredBundleQuantity',
            'ConfigurableBundleCart-ConfiguredBundleQuantityExpander::expandConfiguredBundleItemsWithQuantityPerSlot',
            'ConfigurableBundleCart-ConfiguredBundleQuantityUpdater::updateConfiguredBundleQuantity',
            'ConfigurableBundleCart-ConfiguredBundleQuantityUpdater::updateConfiguredBundleQuantityPerSlot',
            'ConfigurableBundleCart-ConfiguredBundleTemplateSlotChecker::checkConfiguredBundleTemplateSlotCombination',
            'ConfigurableBundleNoteWidget-ConfiguredBundleNoteWidget::getName',
            'ConfigurableBundlePageSearch-ConfigurableBundleTemplateImagePageSearchEventSubscriber::getSubscribedEvents',
            'ConfigurableBundlePageSearch-ConfigurableBundleTemplatePageSearchEventSubscriber::getSubscribedEvents',
            'ConfigurableBundleWidget-ConfiguredBundleGrouper::getConfiguredBundles',
            'ConfigurableBundleWidget-QuoteConfiguredBundleWidget::getName',
            'ConfigurableBundleWidget-QuoteConfiguredBundleWidget::getTemplate',
            'ContentGui-ContentResolver::getTermKeys',
            'ContentStorage-ContentStorageEventSubscriber::getSubscribedEvents',
            'Currency-CurrencyBuilder::fromIsoCode',
            'Currency-CurrencyBuilder::getCurrent',
            'Currency-CurrencyFacade::fromIsoCode',
            'Currency-CurrencyFacade::getAllStoresWithCurrencies',
            'Currency-CurrencyFacade::getByIdCurrency',
            //'Currency-CurrencyFacade::validateCurrencyInQuote',
            'Currency-CurrencyReader::getAllStoresWithCurrencies',
            'Currency-CurrencyReader::getByIdCurrency',
            'Currency-CurrencyReader::getByIsoCode',
            'Currency-QuoteValidator::validate',
            'CurrencyWidget-CurrencyWidget::getName',
            'CurrencyWidget-CurrencyWidget::getTemplate',
            'Customer-CustomerAddressCheckoutSalutationValidator::validate',
            'Customer-CustomerCheckoutSalutationValidator::validate',
            'Customer-CustomerFacade::validateCustomerAddressCheckoutSalutation',
            'Customer-CustomerOrderHydrator::hydrateOrderTransfer',
            'Customer-CustomerOrderSaver::saveOrderCustomer',
            'Customer-CustomerTableExpanderPluginExecutor::executeActionExpanderPlugins',
            'Customer-DenyListCustomerPasswordPolicy::validatePassword',
            'Customer-LengthCustomerPasswordPolicy::validatePassword',
            'Customer-PreConditionChecker::checkPreConditions',
            'Customer-SequenceCustomerPasswordPolicy::validatePassword',
            'CustomerPage-AddressChoicesResolver::getAddressChoices',
            'CustomerPage-CustomerAddressExpander::expandWithCustomerAddress',
            'CustomerPage-CustomerLoginFormAuthenticator::authenticate',
            'CustomerPage-CustomerLoginFormAuthenticator::supports',
            'CustomerPage-CustomerNavigationWidget::getName',
            'CustomerPage-CustomerNavigationWidget::getTemplate',
            'CustomerPage-CustomerRememberMeExpander::expand',
            'CustomerPage-CustomerSecurityOptionsBuilder::buildOptions',
            'CustomerPage-CustomerStepHandler::addToDataClass',
            'CustomerPage-InteractiveLoginEventSubscriber::getSubscribedEvents',
            'CustomerPage-LoginCheckUrlFormatter::getLoginCheckPath',
            'CustomerPage-SecurityBuilderExpander::extend',
            'CustomerReorderWidget-CustomerReorderBundleItemCheckboxWidget::getName',
            'CustomerReorderWidget-CustomerReorderFormWidget::getName',
            'CustomerReorderWidget-CustomerReorderItemCheckboxWidget::getName',
            'CustomerReorderWidget-CustomerReorderItemsFormWidget::getName',
            'CustomerValidationPage-LogoutInvalidatedCustomerFilterControllerEventHandler::handle',
            'Discount-AbstractComparator::getExpression',
            'Discount-AbstractComparator::isValidValue',
            'Discount-ClauseValidator::validateClause',
            'Discount-CollectedDiscountItemFilter::filter',
            'Discount-CollectedDiscountSorter::sort',
            'Discount-CollectorContext::collect',
            'Discount-CollectorStrategyResolver::resolveCollector',
            'Discount-ComparatorOperators::compare',
            'Discount-ComparatorOperators::getCompoundComparatorExpressions',
            'Discount-ComparatorOperators::isExistingComparator',
            'Discount-ComparatorOperators::isValidComparatorValue',
            'Discount-CurrencyDecisionRule::isSatisfiedBy',
            'Discount-DayOfWeekDecisionRule::isSatisfiedBy',
            'Discount-DecisionRuleAndSpecification::isSatisfiedBy',
            'Discount-DecisionRuleContext::isSatisfiedBy',
            'Discount-DecisionRuleOrSpecification::isSatisfiedBy',
            'Discount-DiscountableItemFilter::filter',
            'Discount-DiscountableItemTransformer::transformSplittableDiscountableItem',
            'Discount-DiscountFacade::calculatePercentageDiscount',
            'Discount-DiscountFacade::checkDiscountChanges',
            'Discount-DiscountFacade::collectBySku',
            'Discount-DiscountFacade::isCurrencyDecisionRuleSatisfiedBy',
            'Discount-DiscountFacade::isDayOfTheWeekSatisfiedBy',
            'Discount-DiscountFacade::isSubTotalSatisfiedBy',
            'Discount-DiscountFacade::queryStringCompare',
            'Discount-Distributor::distributeDiscountAmountToDiscountableItems',
            'Discount-Equal::compare',
            'Discount-Equal::getAcceptedTypes',
            'Discount-GreaterEqual::compare',
            'Discount-GreaterEqual::getAcceptedTypes',
            'Discount-GreaterEqual::isValidValue',
            'Discount-IsIn::compare',
            'Discount-IsIn::getAcceptedTypes',
            'Discount-MetaDataProvider::isFieldAvailable',
            'Discount-MoneyValueConverter::convertDecimalToCent',
            'Discount-OperatorProvider::createComparators',
            'Discount-PercentageType::calculateDiscount',
            'Discount-QuoteChangeObserver::checkDiscountChanges',
            'Discount-QuoteDiscountMaxUsageValidator::validate',
            'Discount-SpecificationBuilder::buildFromQueryString',
            'Discount-SubTotalDecisionRule::isSatisfiedBy',
            'Discount-Tokenizer::tokenizeQueryString',
            'DiscountPromotion-CartGroupPromotionItems::expandItems',
            'DiscountPromotion-CartValidator::validateCartDiscountPromotions',
            'DiscountPromotion-DiscountPromotionFacade::filterDiscountPromotionItems',
            'DiscountPromotion-DiscountPromotionFacade::isDiscountWithPromotion',
            'DiscountPromotion-DiscountPromotionFacade::validateCartDiscountPromotions',
            'DiscountPromotion-DiscountPromotionItemChecker::isItemPromotional',
            'DiscountPromotion-DiscountPromotionItemChecker::isItemRelatedToDiscountPromotion',
            'DiscountPromotion-DiscountPromotionItemFilter::filterDiscountPromotionItems',
            'DiscountPromotion-DiscountPromotionReader::isDiscountWithPromotion',
            'DiscountPromotion-DiscountVoucherQuoteWriter::addDiscountVoucherCode',
            'DiscountPromotion-MultipleSkusDiscountPromotionCollectorStrategy::isApplicable',
            'DiscountPromotionWidget-CartDiscountPromotionProductListWidget::getName',
            'DiscountPromotionWidget-CartDiscountPromotionProductListWidget::getTemplate',
            'DiscountPromotionWidget-CartFormWidgetParameterExpander::expand',
            'DiscountPromotionWidget-DiscountPromotionDiscountReader::getAbstractSkusGroupedByIdDiscount',
            'DiscountPromotionWidget-DiscountPromotionDiscountReader::getUniqueDiscounts',
            'DummyMarketplacePayment-PaymentMethodFilter::filterPaymentMethods',
            'DynamicEntity-DynamicEntityFacade::getDynamicEntityConfigurationCollection',
            'Event-EventDispatcher::trigger',
            'Event-EventDispatcher::triggerBulk',
            'Event-EventFacade::trigger',
            'Event-EventFacade::triggerBulk',
            'Event-EventListenerContext::getEventQueueName',
            'Event-EventListenerContext::getQueuePoolName',
            'Event-EventListenerContext::isHandledInQueue',
            'Event-EventLogger::log',
            'Event-SubscriberMerger::mergeSubscribersWith',
            'EventBehavior-EventBehaviorFacade::getEventTransferForeignKeys',
            'EventBehavior-EventBehaviorFacade::getEventTransferIds',
            'EventBehavior-EventBehaviorFacade::triggerRuntimeEvents',
            'EventBehavior-EventEntityTransferFilter::getEventTransferForeignKeys',
            'EventBehavior-EventEntityTransferFilter::getEventTransferIds',
            'EventBehavior-EventEntityTransferFilter::getEventTransfersAdditionalValues',
            'EventBehavior-EventResourcePluginResolver::getAvailableResourceNames',
            'EventBehavior-TriggerManager::triggerRuntimeEvents',
            'ExampleProductSalePage-ExampleProductSalePageFacade::findProductLabelProductAbstractRelationChanges',
            'ExampleProductSalePage-ExampleProductSalePageQueryContainer::queryProductLabelByName',
            'ExampleProductSalePage-ExampleProductSalePageQueryContainer::queryRelationsBecomingInactive',
            'ExampleProductSalePage-ProductAbstractRelationReader::findProductLabelProductAbstractRelationChanges',
            'GiftCard-GiftCardCalculator::recalculate',
            'GiftCard-GiftCardDiscountableItemFilter::filterGiftCardDiscountableItems',
            'GiftCard-GiftCardFacade::filterGiftCardDiscountableItems',
            'GiftCard-GiftCardFacade::filterPaymentMethods',
            'GiftCard-OrderGiftCardsRelationshipWriter::saveOrderGiftCards',
            'GiftCard-PaymentMethodFilter::filterPaymentMethods',
            'GiftCard-SalesOrderItemSaver::saveSalesOrderItemGiftCards',
            'GiftCard-SalesOrderPaymentSaver::saveGiftCardOrderPayments',
            'GiftCard-SalesOrderPreChecker::precheckSalesOrderGiftCards',
            'GiftCard-ShipmentMethodCollectionRemover::remove',
            'GiftCard-ShipmentMethodGiftCardChecker::containsOnlyGiftCardItems',
            'GiftCard-ShipmentMethodGiftCardDisallowedChecker::isShipmentMethodSuitable',
            'GiftCard-ShipmentMethodGiftCardFilter::filter',
            'Kernel-ClassNameFinder::findClassName',
            'Kernel-AbstractClassResolver::resolve',
            'Kernel-ClassNameCandidatesBuilder::buildClassNames',
            'LanguageSwitcherWidget-LanguageSwitcherWidget::getName',
            'LanguageSwitcherWidget-LanguageSwitcherWidget::getTemplate',
            'ManualOrderEntry-OrderSourceHydrator::hydrateOrderSource',
            'MerchantOpeningHoursWidget-MerchantOpeningHoursWidget::getName',
            'MerchantProductApproval-MerchantProductApprovalProductAbstractExpander::expand',
            'MerchantProductGui-MerchantProductQueryCriteriaExpander::expandQueryCriteria',
            'MerchantProductOfferSearch-MerchantProductOfferSearchEventSubscriber::getSubscribedEvents',
            'MerchantProductOfferWidget-MerchantProductOfferExpander::expandItemTransferWithProductOfferReference',
            'MerchantProductOfferWidget-MerchantProductOffersSelectWidget::getName',
            'MerchantProductOfferWidget-MerchantProductOffersSelectWidget::getTemplate',
            'MerchantProductOfferWidget-MerchantProductOfferWidget::getName',
            'MerchantProductOfferWidget-MerchantProductOfferWidget::getTemplate',
            'MerchantProductOfferWidget-ShopContextResolver::resolve',
            'MerchantProductOption-MerchantProductOptionValidator::validateMerchantProductOptionsInCart',
            'MerchantProductOption-MerchantProductOptionValidator::validateMerchantProductOptionsOnCheckout',
            'MerchantProductWidget-MerchantProductWidget::getName',
            'MerchantProductWidget-MerchantProductWidget::getTemplate',
            'MerchantRelationRequestWidget-MerchantRelationRequestChecker::isMerchantApplicableForRequest',
            'MerchantRelationRequestWidget-MerchantRelationRequestCreateButtonWidget::getName',
            'MerchantRelationRequestWidget-MerchantRelationRequestCreateLinkWidget::getName',
            'MerchantRelationRequestWidget-MerchantRelationRequestCreateLinkWidget::getTemplate',
            'MerchantRelationRequestWidget-MerchantRelationRequestMenuItemWidget::getName',
            'MerchantRelationRequestWidget-MerchantRelationRequestMenuItemWidget::getTemplate',
            'MerchantRelationship-MerchantRelationshipExpander::expandWithName',
            'MerchantRelationship-MerchantRelationshipHydrator::hydrate',
            'MerchantRelationshipProductList-MerchantRelationshipProductListExpander::expandMerchantRelationship',
            'MerchantRelationshipProductList-MerchantRelationshipProductListFacade::expandMerchantRelationship',
            'MerchantRelationshipSalesOrderThreshold-MerchantRelationshipSalesOrderThresholdFacade::findApplicableThresholds',
            'MerchantRelationshipSalesOrderThreshold-MerchantRelationshipThresholdReader::findApplicableThresholds',
            'MerchantRelationshipWidget-MerchantRelationshipLinkListWidget::getName',
            'MerchantRelationshipWidget-MerchantRelationshipMenuItemWidget::getName',
            'MerchantRelationshipWidget-MerchantRelationshipMenuItemWidget::getTemplate',
            'MerchantSalesOrder-ExpenseExpander::expandShipmentExpenseWithMerchantReference',
            'MerchantSalesOrder-MerchantSalesOrderFacade::expandOrderWithMerchantReferences',
            'MerchantSalesOrder-OrderExpander::expandOrderWithMerchantReferences',
            'MerchantSalesOrder-OrderItemExpander::expandOrderItemWithMerchant',
            'MerchantSalesOrderWidget-MerchantOrderReferenceForItemsWidget::getName',
            'MerchantSalesReturnWidget-MerchantSalesReturnCreateFormWidget::getName',
            'MerchantSearchWidget-MerchantSearchWidget::getName',
            'MerchantShipment-ShipmentExpander::expandCartChangeShipmentWithMerchantReference',
            'MerchantShipment-ShipmentExpander::expandQuoteShipmentWithMerchantReference',
            'MerchantSwitcherWidget-MerchantSwitcherSelectorFormWidget::getName',
            'MerchantSwitcherWidget-MerchantSwitcherSelectorFormWidget::getTemplate',
            'MerchantWidget-MerchantMetaSchemaWidget::getName',
            'MerchantWidget-MerchantMetaSchemaWidget::getTemplate',
            'MerchantWidget-ShoppingListMerchantWidget::getName',
            'MerchantWidget-SoldByMerchantWidget::getName',
            'MerchantWidget-SoldByMerchantWidget::getTemplate',
            'Messenger-InMemoryMessageTray::getFlashMessagesTransfer',
            'Messenger-InMemoryMessageTray::getMessages',
            'Messenger-MessengerFacade::getStoredMessages',
            'Messenger-MessengerFacade::addSuccessMessage',
            'Messenger-SessionMessageTray::addSuccessMessage',
            'Messenger-MessageTranslator::translate',
            'MoneyGui-MoneyType::buildForm',
            'MoneyGui-MoneyType::buildView',
            'MoneyGui-MoneyType::configureOptions',
            'MoneyGui-MoneyTypeDataProvider::getMoneyCurrencyOptions',
            'MoneyGui-MoneyTypeDataProvider::getStoreById',
            'MoneyGui-SimpleMoneyType::getBlockPrefix',
            'MoneyWidget-CurrencyIsoCodeWidget::getCurrencyIsoCode',
            'MoneyWidget-CurrencyIsoCodeWidget::getName',
            'MoneyWidget-CurrencyIsoCodeWidget::getTemplate',
            'MultiCart-MultiCartMessenger::addDefaultQuoteChangedMessage',
            'MultiCartWidget-AddToMultiCartWidget::getName',
            'MultiCartWidget-AddToMultiCartWidget::getTemplate',
            'MultiCartWidget-CartOperationsWidget::getName',
            'MultiCartWidget-MiniCartWidget::getName',
            'MultiCartWidget-MiniCartWidget::getTemplate',
            'MultiCartWidget-MiniCartWidgetDataProvider::getActiveCart',
            'MultiCartWidget-MiniCartWidgetDataProvider::getInActiveQuoteList',
            'MultiCartWidget-MiniCartWidgetDataProvider::isMultiCartAllowed',
            'MultiCartWidget-MultiCartListWidget::getName',
            'MultiCartWidget-MultiCartMenuItemWidget::getName',
            'MultiCartWidget-MultiCartMenuItemWidget::getTemplate',
            'MultiCartWidget-QuickOrderPageWidget::getName',
            'NewsletterWidget-NewsletterSubscriptionSummaryWidget::getName',
            'NewsletterWidget-NewsletterSubscriptionSummaryWidget::getTemplate',
            'NewsletterWidget-NewsletterSubscriptionWidget::getName',
            'NewsletterWidget-NewsletterSubscriptionWidget::getTemplate',
            'Nopayment-NopaymentCheckoutPreConditionChecker::checkCondition',
            'Nopayment-NopaymentMethodFilter::filterPaymentMethods',
            'Oms-ActiveProcessFetcher::getReservedStatesFromAllActiveProcesses',
            'Oms-Builder::createProcess',
            'Oms-CommandCollection::add',
            'Oms-CommandCollection::get',
            'Oms-ConditionCollection::add',
            'Oms-Event::getCommand',
            'Oms-Event::getName',
            'Oms-Event::getTransitionsBySource',
            'Oms-Event::hasCommand',
            'Oms-Event::hasTimeout',
            'Oms-Event::isOnEnter',
            'Oms-FlagChecker::hasOrderItemsFlag',
            'Oms-LockedOrderStateMachine::checkConditions',
            'Oms-OmsFacade::getOmsReservedProductQuantityForSkus',
            'Oms-OrderAggregatedItemStateExpander::expandOrdersWithAggregatedItemStates',
            'Oms-OrderExpander::expandOrderWithOmsStates',
            'Oms-OrderExpander::setOrderIsCancellableByItemState',
            'Oms-OrderItemStateExpander::expandOrderItemsWithItemState',
            'Oms-ProcessCacheReader::getProcess',
            'Oms-ProcessCacheReader::hasProcess',
            'Oms-ReservationReader::getOmsReservedProductQuantityForSkus',
            'Oms-State::getEvent',
            'Oms-State::getName',
            'Oms-State::getOnEnterEvent',
            'Oms-State::getOutgoingTransitions',
            'Oms-State::getProcess',
            'Oms-State::hasEvent',
            'Oms-State::hasOnEnterEvent',
            'Oms-State::hasTimeoutEvent',
            'Oms-State::isReserved',
            'Oms-Timeout::checkTimeouts',
            'Oms-Timeout::dropOldTimeout',
            'Oms-Timeout::setNewTimeout',
            'Oms-Transition::getEvent',
            'Oms-Transition::getSource',
            'Oms-Transition::getTarget',
            'Oms-Transition::hasCondition',
            'Oms-Transition::hasEvent',
            'Oms-TransitionLog::addCommand',
            'Oms-TransitionLog::addSourceState',
            'Oms-TransitionLog::addTargetState',
            'Oms-TransitionLog::setEvent',
            'OrderCancelWidget-OrderCancelButtonWidget::getName',
            'OrderCustomReferenceWidget-OrderCustomReferenceWidget::getName',
            'OrderCustomReferenceWidget-OrderCustomReferenceWidget::getTemplate',
            'Payment-ForeignPayment::confirmPreOrderPayment',
            'Payment-ForeignPayment::initializePayment',
            'Payment-PaymentCalculator::recalculatePayments',
            'Payment-PaymentFacade::confirmPreOrderPayment',
            'Permission-PermissionExecutor::can',
            'Permission-PermissionFinder::findPermissionPlugin',
            'Price-PriceFacade::getDefaultPriceMode',
            'Price-PriceFacade::getGrossPriceModeIdentifier',
            'Price-PriceFacade::getNetPriceModeIdentifier',
            'Price-PriceFacade::validatePriceModeInQuote',
            'PriceCartConnector-ItemComparator::isSameItem',
            'PriceCartConnector-ItemIdentifierBuilder::buildItemIdentifier',
            'PriceCartConnector-PriceProductFilter::createPriceProductFilterTransfer',
            'PriceProduct-CurrencyReaderWithCache::getCurrencyTransferFromIsoCode',
            'PriceProduct-CurrencyReaderWithCache::getCurrencyTransfersFromIsoCodes',
            'PriceProduct-PriceGrouper::groupPriceProduct',
            'PriceProduct-PriceProductAbstractReader::findProductAbstractPricesById',
            'PriceProduct-PriceProductAbstractReader::findProductAbstractPricesWithoutPriceExtraction',
            'PriceProduct-PriceProductConcreteReader::expandProductConcreteTransfersWithPrices',
            'PriceProduct-PriceProductConcreteWriter::persistProductConcretePriceCollection',
            'PriceProduct-PriceProductCriteriaBuilder::buildCriteriaFromFilter',
            'PriceProduct-PriceProductDefaultWriter::persistPriceProductDefault',
            'PriceProduct-PriceProductExpander::expandPriceProductTransfers',
            'PriceProduct-PriceProductFacade::buildCriteriaFromFilter',
            'PriceProduct-PriceProductFacade::findProductAbstractPrices',
            'PriceProduct-PriceProductFacade::findProductAbstractPricesWithoutPriceExtraction',
            'PriceProduct-PriceProductFacade::getDefaultPriceTypeName',
            'PriceProduct-PriceProductFacade::getPriceModeIdentifierForBothType',
            'PriceProduct-PriceProductFacade::getPriceTypeValues',
            'PriceProduct-PriceProductFacade::groupPriceProductCollection',
            'PriceProduct-PriceProductReaderPluginExecutor::executePriceExtractorPluginsForProductAbstract',
            'PriceProduct-PriceProductReaderPluginExecutor::executePriceExtractorPluginsForProductConcrete',
            'PriceProduct-PriceProductStoreWriter::deleteOrphanPriceProductStoreEntities',
            'PriceProduct-PriceProductStoreWriter::persistPriceProductStore',
            'PriceProduct-PriceProductStoreWriterPluginExecutor::executeOrphanPriceProductStoreRemovalVoterPlugins',
            'PriceProduct-PriceProductTypeReader::getPriceTypeByName',
            'PriceProduct-PriceProductTypeReader::getPriceTypes',
            'PriceProduct-PriceProductTypeReader::handleDefaultPriceType',
            'PriceProduct-PriceProductTypeReader::hasPriceType',
            'PriceProductMerchantRelationshipGui-MerchantRelationshipPriceDimensionForm::buildForm',
            'PriceProductMerchantRelationshipGui-MerchantRelationshipPriceDimensionForm::configureOptions',
            'PriceProductScheduleGui-AbstractProductTabCreator::createScheduledPriceTabForProductAbstract',
            'PriceProductScheduleGui-AbstractScheduledPriceTable::getSearchTerm',
            'PriceProductVolume-PriceProductVolumeFacade::extractPriceProductVolumesForProductAbstract',
            'PriceProductVolume-PriceProductVolumeFacade::extractPriceProductVolumesForProductConcrete',
            'PriceProductVolume-VolumePriceExtractor::extractPriceProductVolumesForProductAbstract',
            'PriceProductVolume-VolumePriceExtractor::extractPriceProductVolumesForProductConcrete',
            'PriceProductVolume-VolumePriceExtractor::extractPriceProductVolumeTransfersFromArray',
            'PriceProductVolumeWidget-CurrentProductPriceVolumeWidget::getName',
            'PriceProductVolumeWidget-CurrentProductPriceVolumeWidget::getTemplate',
            'PriceProductVolumeWidget-PriceProductVolumeResolver::resolveVolumeProductPrices',
            'PriceProductWidget-PriceProductWidget::getName',
            'PriceWidget-PriceModeSwitcherWidget::getName',
            'PriceWidget-PriceModeSwitcherWidget::getTemplate',
            'Product-ProductFacade::touchProductAbstract',
            'Product-AbstractProductAbstractManagerSubject::attachAfterCreateObserver',
            'Product-AbstractProductAbstractManagerSubject::attachAfterUpdateObserver',
            'Product-AbstractProductAbstractManagerSubject::attachBeforeCreateObserver',
            'Product-AbstractProductAbstractManagerSubject::attachBeforeUpdateObserver',
            'Product-AbstractProductAbstractManagerSubject::attachReadObserver',
            'Product-AbstractProductAbstractManagerSubject::notifyBeforeUpdateObservers',
            'Product-AbstractProductConcreteManagerSubject::attachAfterCreateObserver',
            'Product-AbstractProductConcreteManagerSubject::attachAfterUpdateObserver',
            'Product-AbstractProductConcreteManagerSubject::attachBeforeCreateObserver',
            'Product-AbstractProductConcreteManagerSubject::attachBeforeUpdateObserver',
            'Product-AbstractProductConcreteManagerSubject::attachReadObserver',
            'Product-AbstractProductConcreteManagerSubject::notifyBeforeCreateObservers',
            'Product-AbstractProductConcreteManagerSubject::notifyReadObservers',
            'Product-AttributeEncoder::decodeAttributes',
            'Product-AttributeEncoder::encodeAttributes',
            'Product-AttributeLoader::getCombinedAbstractAttributeKeys',
            'Product-AttributeMerger::merge',
            'Product-ProductAbstractAfterUpdateUrlObserver::update',
            'Product-ProductAbstractAssertion::assertProductExists',
            'Product-ProductAbstractAssertion::assertSkuIsUniqueWhenUpdatingProduct',
            'Product-ProductAbstractBeforeCreateObserverPluginManager::create',
            'Product-ProductAbstractBeforeUpdateObserverPluginManager::update',
            'Product-ProductAbstractReadObserverPluginManager::executeProductAbsractReadPlugins',
            'Product-ProductAbstractStatusChecker::isActive',
            'Product-ProductAbstractStoreRelationReader::getStoreRelation',
            'Product-ProductAbstractStoreRelationWriter::save',
            'Product-ProductConcreteAssertion::assertSkuIsUnique',
            'Product-ProductConcreteBeforeCreateObserverPluginManager::create',
            'Product-ProductConcreteManager::findProductConcreteIdBySku',
            'Product-ProductConcreteManager::hasProductConcrete',
            'Product-ProductConcreteNameGenerator::getLocalizedProductConcreteName',
            'Product-ProductConcreteReadObserverPluginManager::read',
            'Product-SkuGenerator::generateProductAbstractSku',
            'ProductAlternative-ProductAlternativeFacade::doAllConcreteProductsHaveAlternatives',
            'ProductAlternative-ProductAlternativeFacade::findProductAbstractIdsWhichConcreteHasAlternative',
            'ProductAlternative-ProductAlternativeFacade::isAlternativeProductApplicable',
            'ProductAlternative-ProductAlternativeReader::doAllConcreteProductsHaveAlternatives',
            'ProductAlternative-ProductAlternativeReader::findProductAbstractIdsWhichConcreteHasAlternative',
            'ProductAlternative-ProductAlternativeReader::isAlternativeProductApplicable',
            'ProductAlternativeWidget-ProductAlternativeListWidget::getName',
            'ProductAlternativeWidget-ProductAlternativeListWidget::getTemplate',
            'ProductAlternativeWidget-ShoppingListProductAlternativeWidget::getName',
            'ProductAlternativeWidget-WishlistProductAlternativeWidget::getName',
            'ProductApproval-ProductAbstractExpander::expandProductAbstract',
            'ProductApproval-ProductReader::getProductAbstractTransfersIndexedByIdProductAbstract',
            'ProductApprovalGui-ArrayExpander::insertArrayItemAfterKey',
            'ProductApprovalGui-ProductApprovalProductTableActionExpander::expandWithProductApprovalStatusActions',
            'ProductApprovalGui-ProductApprovalProductTableConfigurationExpander::expandTableConfiguration',
            'ProductApprovalGui-ProductApprovalProductTableDataExpander::expandTableData',
            'ProductApprovalGui-ProductApprovalStatusReader::getApplicableTableActionApprovalStatuses',
            'ProductBarcodeWidget-ProductBarcodeWidget::getName',
            'ProductBundle-PriceReaderWithCache::getNetPriceModeIdentifier',
            'ProductBundle-ProductBundleCache::cacheProductForBundleTransfersBySku',
            'ProductBundle-ProductBundleCache::cacheProductForBundleTransfersBySkus',
            'ProductBundle-ProductBundleCache::hasProductForBundleTransfersBySku',
            'ProductBundle-ProductBundleCartActiveCheck::checkActiveItems',
            'ProductBundle-ProductBundleCartChangeObserver::checkBundleItemsChanges',
            'ProductBundle-ProductBundleCartExpander::expandBundleItems',
            'ProductBundle-ProductBundleCartItemGroupKeyExpander::expandExpandBundleItemGroupKey',
            'ProductBundle-ProductBundleCartPostSaveUpdate::updateBundles',
            'ProductBundle-ProductBundleCartPriceChecker::checkCartPrices',
            'ProductBundle-ProductBundleCheckoutAvailabilityCheck::checkCheckoutAvailability',
            'ProductBundle-ProductBundleIdHydrator::hydrate',
            'ProductBundle-ProductBundleImageCartExpander::expandBundleItems',
            'ProductBundle-ProductBundleOrderSaver::saveOrderBundleItems',
            'ProductBundle-ProductBundlePreReloadUpdater::preReloadItems',
            'ProductBundle-ProductBundlePriceCalculation::calculateForCalculableObjectTransfer',
            'ProductBundle-ProductBundleWriter::saveBundledProducts',
            'ProductBundle-ProductOptionExpander::expandOrderProductBundlesWithProductOptions',
            'ProductBundleWidget-ProductBundleCartItemsListWidget::getName',
            'ProductBundleWidget-ProductBundleCartItemsListWidget::getTemplate',
            'ProductBundleWidget-ProductBundleProductDetailPageItemsListWidget::getName',
            'ProductBundleWidget-ProductBundleProductDetailPageItemsListWidget::getTemplate',
            'ProductCategorySearch-ProductCategorySearchFacade::expandProductPageMapWithCategoryData',
            'ProductCategorySearch-ProductPageMapCategoryExpander::expandProductPageMapWithCategoryData',
            'ProductCategoryWidget-ProductBreadcrumbsWithCategoriesWidget::getName',
            'ProductCategoryWidget-ProductBreadcrumbsWithCategoriesWidget::getTemplate',
            'ProductCategoryWidget-ProductSchemaOrgCategoryWidget::getName',
            'ProductCategoryWidget-ProductSchemaOrgCategoryWidget::getTemplate',
            'ProductConfigurationCart-ProductConfigurationGroupKeyItemExpander::expandProductConfigurationItemsWithGroupKey',
            'ProductConfigurationCart-ProductConfigurationPriceProductExpander::expandPriceProductTransfersWithProductConfigurationPrices',
            'ProductConfigurationCartWidget-ProductConfigurationCartItemDisplayWidget::getName',
            'ProductConfigurationCartWidget-ProductConfigurationCartItemDisplayWidget::getTemplate',
            'ProductConfigurationCartWidget-ProductConfigurationCartPageButtonWidget::getName',
            'ProductConfigurationCartWidget-ProductConfigurationCartPageButtonWidget::getTemplate',
            'ProductConfigurationCartWidget-ProductConfigurationQuoteValidatorWidget::getName',
            'ProductConfigurationCartWidget-ProductConfigurationQuoteValidatorWidget::getTemplate',
            'ProductConfigurationGui-ProductConfigurationTableDataExpander::expandProductItemWithProductConfigurationType',
            'ProductConfigurationShoppingListWidget-ProductConfigurationShoppingListItemDisplayWidget::getName',
            'ProductConfigurationShoppingListWidget-ProductConfigurationShoppingListPageButtonWidget::getName',
            'ProductConfigurationWidget-ProductConfigurationProductDetailPageButtonWidget::getName',
            'ProductConfigurationWidget-ProductConfigurationProductDetailPageButtonWidget::getTemplate',
            'ProductConfigurationWidget-ProductConfigurationProductViewDisplayWidget::getName',
            'ProductConfigurationWidget-ProductConfigurationProductViewDisplayWidget::getTemplate',
            'ProductConfigurationWishlistWidget-ProductConfigurationWishlistFormWidget::getName',
            'ProductConfigurationWishlistWidget-ProductConfigurationWishlistItemDisplayWidget::getName',
            'ProductConfigurationWishlistWidget-ProductConfigurationWishlistPageButtonWidget::getName',
            'ProductDiscontinued-ProductDiscontinuedFacade::getProductDiscontinuedCollection',
            'ProductDiscontinuedProductBundleConnector-ProductBundleDiscontinuedWriter::discontinueProductBundleByBundledProducts',
            'ProductDiscontinuedProductLabelConnector-ProductAbstractRelationReader::findProductLabelProductAbstractRelationChanges',
            'ProductDiscontinuedProductLabelConnector-ProductDiscontinuedProductLabelConnectorFacade::findProductLabelProductAbstractRelationChanges',
            'ProductDiscontinuedWidget-ProductDiscontinuedNoteWidget::getName',
            'ProductDiscontinuedWidget-ProductDiscontinuedNoteWidget::getTemplate',
            'ProductDiscontinuedWidget-ProductDiscontinuedWidget::getName',
            'ProductDiscountConnector-AttributeProvider::getAllAttributeTypes',
            'ProductDiscountConnector-ProductDiscountConnectorFacade::getAttributeTypes',
            'ProductGroupWidget-ProductGroupColorWidget::getName',
            'ProductGroupWidget-ProductGroupReader::getProductGroups',
            'ProductGroupWidget-ProductGroupWidget::getName',
            'ProductGroupWidget-ProductGroupWidget::getTemplate',
            'ProductImage-Reader::expandProductAbstractWithImageSets',
            'ProductImage-Reader::expandProductConcreteTransfersWithImageSets',
            'ProductImage-Reader::getProductImagesSetCollectionByProductAbstractId',
            'ProductLabel-ProductAbstractRelationReader::findIdsProductAbstractByIdProductLabel',
            'ProductLabel-ProductLabelFacade::findLabelByLabelName',
            'ProductLabel-ProductLabelFacade::findProductAbstractRelationsByIdProductLabel',
            'ProductLabelWidget-ProductAbstractLabelWidget::getName',
            'ProductLabelWidget-ProductAbstractLabelWidget::getTemplate',
            'ProductLabelWidget-ProductConcreteLabelWidget::getName',
            'ProductList-ProductListRestrictionFilter::filterRestrictedProductConcreteSkus',
            'ProductList-ProductListRestrictionValidator::validateItemAddition',
            'ProductList-RestrictedItemsFilter::filterRestrictedItems',
            'ProductManagement-AbstractProductFormDataProvider::getOptions',
            'ProductManagement-AbstractSubForm::configureOptions',
            'ProductManagement-GeneralForm::buildForm',
            'ProductManagement-ImageCollectionForm::buildForm',
            'ProductManagement-ImageCollectionForm::configureOptions',
            'ProductManagement-ImageCollectionForm::getBlockPrefix',
            'ProductManagement-ImageSetForm::buildForm',
            'ProductManagement-ImageSetForm::configureOptions',
            'ProductManagement-ImageSetForm::getBlockPrefix',
            'ProductManagement-LocaleProvider::getCurrentLocale',
            'ProductManagement-LocaleProvider::getLocaleCollection',
            'ProductManagement-ProductFormAdd::configureOptions',
            'ProductManagement-ProductMoneyCollectionDataProvider::mergeMissingMoneyValues',
            'ProductManagement-ProductMoneyCollectionType::buildForm',
            'ProductManagement-ProductMoneyCollectionType::configureOptions',
            'ProductManagement-ProductMoneyCollectionType::getBlockPrefix',
            'ProductManagement-ProductMoneyType::buildForm',
            'ProductManagement-ProductMoneyType::buildView',
            'ProductManagement-ProductMoneyType::configureOptions',
            'ProductManagement-ProductPriceNotBlankValidator::validate',
            'ProductManagement-ProductTypeHelper::isGiftCardByProductAbstractEntity',
            'ProductManagement-ProductTypeHelper::isProductBundleByProductAbstractEntity',
            'ProductManagement-SeoForm::buildForm',
            'ProductMeasurementUnit-CartChangeExpander::expandWithQuantitySalesUnit',
            'ProductMeasurementUnit-CartChangeSalesUnitExpander::expandItemsWithDefaultQuantitySalesUnit',
            'ProductMeasurementUnit-OrderItemExpander::expandOrderItem',
            'ProductMeasurementUnit-ProductMeasurementSalesUnitGroupKeyGenerator::expandItemGroupKey',
            'ProductMeasurementUnit-ProductMeasurementUnitFacade::expandItemGroupKeyWithQuantitySalesUnit',
            'ProductMeasurementUnitWidget-CartProductMeasurementUnitQuantitySelectorWidget::getName',
            'ProductMeasurementUnitWidget-CartProductMeasurementUnitQuantitySelectorWidget::getTemplate',
            'ProductNew-ProductAbstractRelationReader::findProductLabelProductAbstractRelationChanges',
            'ProductNew-ProductNewFacade::findProductLabelProductAbstractRelationChanges',
            'ProductOffer-InactiveProductOfferItemsFilter::filterInactiveProductOfferItems',
            'ProductOffer-ItemProductOfferChecker::checkItemProductOffer',
            'ProductOffer-ProductOfferCartItemQuantityCounter::countCartItemQuantity',
            'ProductOfferSales-OrderItemExpander::expandWithProductOffer',
            'ProductOfferServicePointAvailability-ProductOfferServicePointAvailabilityReader::getItemsAvailabilityForStore',
            'ProductOfferServicePointAvailability-SellableItemRequestFilter::filterSellableItemRequestTransfersWithProductOfferReferenceAndServicePoint',
            'ProductOfferServicePointAvailabilityWidget-ProductOfferServicePointAvailabilityDisplayWidget::getName',
            'ProductOfferServicePointAvailabilityWidget-ProductOfferServicePointAvailabilityWidget::getName',
            'ProductOfferShipmentTypeAvailability-ProductOfferShipmentTypeAvailabilityReader::getItemsAvailabilityForStore',
            'ProductOfferShipmentTypeAvailability-SellableItemRequestFilter::filterSellableItemRequestTransfersWithProductOfferReferenceAndShipmentType',
            'ProductOfferShoppingListWidget-ProductOfferShoppingListWidget::getName',
            'ProductOfferWarehouseAllocationExample-WarehouseAllocator::allocateSalesOrderWarehouse',
            'ProductOfferWidget-ShoppingListProductOfferWidget::getName',
            'ProductOption-ProductOptionGroupIdHydrator::hydrateProductOptionGroupIds',
            'ProductOption-ProductOptionOrderSaver::saveOrderProductOptions',
            'ProductOption-ProductOptionOrderSaver::saveOrderProductOptionsTransaction',
            'ProductOptionCartConnector-GroupKeyExpander::expand',
            'ProductOptionCartConnector-ProductOptionCartQuantity::changeQuantity',
            'ProductOptionCartConnector-ProductOptionValidator::checkProductOptionExistence',
            'ProductOptionCartConnector-ProductOptionValueExpander::expandProductOptions',
            'ProductOptionCartConnector-ProductOptionValuePriceValidator::validateProductOptionValuePrices',
            'ProductOptionWidget-ProductOptionConfiguratorWidget::getName',
            'ProductOptionWidget-ProductOptionConfiguratorWidget::getTemplate',
            'ProductPackagingUnit-AmountGroupKeyItemExpander::expandCartWithAmountGroupKey',
            'ProductPackagingUnit-AmountSalesUnitItemExpander::expandCartWithAmountSalesUnit',
            'ProductPackagingUnit-OrderItemExpander::expandSalesOrderItemWithAmountAndAmountSku',
            'ProductPackagingUnit-OrderItemExpander::expandSalesOrderItemWithAmountSalesUnit',
            'ProductPackagingUnit-PriceChangeExpander::setCustomAmountPrice',
            'ProductPackagingUnit-ProductPackagingUnitAmountRestrictionValidator::validateItemAddition',
            'ProductPackagingUnit-ProductPackagingUnitAmountSalesUnitValue::calculateAmountSalesUnitValueInQuote',
            'ProductPackagingUnit-ProductPackagingUnitCartPreCheck::checkCartAvailability',
            'ProductPackagingUnit-ProductPackagingUnitCheckoutPreCheck::checkoutAvailabilityPreCheck',
            'ProductPackagingUnit-ProductPackagingUnitFacade::expandSalesOrderItemWithAmountSalesUnit',
            'ProductPackagingUnit-ProductPackagingUnitGroupKeyGenerator::getItemWithGroupKey',
            'ProductPackagingUnit-ProductPackagingUnitItemExpander::expandCartChangeWithProductPackagingUnit',
            'ProductPackagingUnit-ProductPackagingUnitItemQuantityValidator::isProductPackagingUnitItemQuantitySplittable',
            'ProductPackagingUnitWidget-ProductPackagingUnitWidget::getName',
            'ProductPackagingUnitWidget-ProductPackagingUnitWidget::getTemplate',
            'ProductPageSearch-AddToCartSkuReader::getProductAbstractAddToCartSkus',
            'ProductPageSearch-PageMapBuilder::add',
            'ProductPageSearch-PageMapBuilder::addCategory',
            'ProductPageSearch-PageMapBuilder::addCompletionTerms',
            'ProductPageSearch-PageMapBuilder::addFullText',
            'ProductPageSearch-PageMapBuilder::addFullTextBoosted',
            'ProductPageSearch-PageMapBuilder::addIntegerFacet',
            'ProductPageSearch-PageMapBuilder::addIntegerSort',
            'ProductPageSearch-PageMapBuilder::addSearchResultData',
            'ProductPageSearch-PageMapBuilder::addStringFacet',
            'ProductPageSearch-PageMapBuilder::addStringSort',
            'ProductPageSearch-PageMapBuilder::addSuggestionTerms',
            'ProductPageSearch-ProductConcretePageSearchProductLocalizedAttributesEventSubscriber::getSubscribedEvents',
            'ProductQuantity-CartChangeTransferNormalizerPreChecker::hasNormalizableItems',
            'ProductRelationWidget-SimilarProductsWidget::getName',
            'ProductRelationWidget-SimilarProductsWidget::getTemplate',
            'ProductRelationWidget-UpSellingProductsWidget::getName',
            'ProductRelationWidget-UpSellingProductsWidget::getTemplate',
            'ProductReplacementForWidget-ProductReplacementForListWidget::getName',
            'ProductReplacementForWidget-ProductReplacementForListWidget::getTemplate',
            'ProductReviewWidget-DisplayProductAbstractReviewWidget::getName',
            'ProductReviewWidget-DisplayProductAbstractReviewWidget::getTemplate',
            'ProductReviewWidget-ProductDetailPageReviewWidget::getName',
            'ProductReviewWidget-ProductDetailPageReviewWidget::getTemplate',
            'ProductReviewWidget-ProductRatingFilterWidget::getName',
            'ProductReviewWidget-ProductRatingFilterWidget::getTemplate',
            'ProductReviewWidget-ProductReviewDisplayWidget::getName',
            'ProductReviewWidget-ProductReviewDisplayWidget::getTemplate',
            'ProductSearch-ProductSearchMarker::activateProductSearch',
            'ProductSearchWidget-ProductConcreteAddWidget::getName',
            'ProductSearchWidget-ProductConcreteAddWidget::getTemplate',
            'ProductSearchWidget-ProductConcreteSearchGridWidget::getName',
            'ProductSearchWidget-ProductConcreteSearchWidget::getName',
            'ProductSearchWidget-ProductConcreteSearchWidget::getTemplate',
            'ProductWidget-CatalogPageProductWidget::getName',
            'ProductWidget-CatalogPageProductWidget::getTemplate',
            'ProductWidget-CmsProductGroupWidget::getName',
            'ProductWidget-CmsProductGroupWidget::getTemplate',
            'ProductWidget-CmsProductWidget::getName',
            'ProductWidget-PdpProductRelationWidget::getName',
            'ProductWidget-PdpProductRelationWidget::getTemplate',
            'ProductWidget-PdpProductReplacementForListWidget::getName',
            'ProductWidget-ProductAlternativeWidget::getName',
            'PushNotification-PushNotificationFacade::getPushNotificationCollection',
            'PushNotification-PushNotificationFacade::sendPushNotifications',
            'PushNotification-PushNotificationSender::sendPushNotifications',
            'PushNotification-PushNotificationSubscriptionDeliveryLogCreator::createPushNotificationSubscriptionDeliveryLogCollection',
            'PushNotification-PushNotificationSubscriptionDeliveryLogExtractor::extractDeliveryLogs',
            'PushNotificationWebPushPhp-PushNotificationFilter::filterPushNotificationCollectionByProviderName',
            'PushNotificationWebPushPhp-PushNotificationSender::sendNotifications',
            'PushNotificationWebPushPhp-PushNotificationWebPushPhpFacade::sendNotifications',
            'PushNotificationWebPushPhp-WebPush::flush',
            'PushNotificationWebPushPhp-WebPushQueueCreator::queuePushNotifications',
            'Quote-QuoteFacade::getQuoteCollection',
            'Quote-QuoteFacade::isQuoteLocked',
            'Quote-QuoteLockStatusValidator::isQuoteLocked',
            'QuoteApproval-QuoteApprovalFacade::getQuoteApprovalsByIdQuote',
            'QuoteApproval-QuoteApprovalFacade::isQuoteInApprovalProcess',
            'QuoteApproval-QuoteStatusCalculator::calculateQuoteStatus',
            'QuoteApprovalShipmentConnector-ShipmentQuoteFieldProvider::getQuoteFieldsAllowedForSaving',
            'QuoteApprovalWidget-QuoteApprovalStatusWidget::getName',
            'QuoteApprovalWidget-QuoteApprovalStatusWidget::getTemplate',
            'QuoteApprovalWidget-QuoteApprovalWidget::getName',
            'QuoteApprovalWidget-QuoteApprovalWidget::getTemplate',
            'QuoteApprovalWidget-QuoteApproveRequestWidget::getName',
            'QuoteApprovalWidget-QuoteApproveRequestWidget::getTemplate',
            'QuoteRequest-QuoteRequestTerminator::closeQuoteRequest',
            'QuoteRequest-QuoteRequestTimeValidator::checkValidUntil',
            'QuoteRequestAgentWidget-QuoteRequestAgentCancelWidget::getName',
            'QuoteRequestAgentWidget-QuoteRequestAgentOverviewWidget::getName',
            'QuoteRequestWidget-QuoteRequestActionsWidget::getName',
            'QuoteRequestWidget-QuoteRequestActionsWidget::getTemplate',
            'QuoteRequestWidget-QuoteRequestCancelWidget::getName',
            'QuoteRequestWidget-QuoteRequestCartWidget::getName',
            'QuoteRequestWidget-QuoteRequestCartWidget::getTemplate',
            'QuoteRequestWidget-QuoteRequestCreateWidget::getName',
            'QuoteRequestWidget-QuoteRequestCreateWidget::getTemplate',
            'QuoteRequestWidget-QuoteRequestMenuItemWidget::getName',
            'QuoteRequestWidget-QuoteRequestMenuItemWidget::getTemplate',
            'Sales-DuplicateOrderChecker::checkDuplicateOrder',
            'Sales-OrderStateMachineResolver::resolve',
            'SalesConfigurableBundle-ConfigurableBundleItemTransformer::transformConfiguredBundleOrderItems',
            'SalesConfigurableBundle-SalesOrderConfiguredBundleWriter::saveSalesOrderConfiguredBundlesFromQuote',
            'SalesConfigurableBundleWidget-OrderItemsConfiguredBundleWidget::getName',
            'SalesMerchantCommission-MerchantCommissionCalculator::recalculateMerchantCommissions',
            'SalesMerchantCommission-MerchantCommissionQuoteSanitizer::sanitizeMerchantCommissionFromQuote',
            'SalesOms-OrderItemExpander::expandOrderItemWithReference',
            'SalesOrderThreshold-ExpenseRemover::removeSalesOrderThresholdExpenses',
            'SalesOrderThreshold-ExpenseSaver::saveSalesOrderSalesOrderThresholdExpense',
            'SalesOrderThreshold-SalesOrderThresholdDataSourceStrategyResolver::findApplicableThresholds',
            'SalesOrderThreshold-SalesOrderThresholdFacade::getSalesOrderThresholds',
            'SalesOrderThreshold-SalesOrderThresholdReader::getSalesOrderThresholds',
            'SalesOrderThreshold-SalesOrderThresholdStrategyResolver::resolveSalesOrderThresholdStrategy',
            'SalesOrderThreshold-ThresholdMessenger::addSalesOrderThresholdMessages',
            'SalesOrderThresholdWidget-SalesOrderThresholdWidget::getName',
            'SalesOrderThresholdWidget-SalesOrderThresholdWidget::getTemplate',
            'SalesProductBundleWidget-OrderItemsProductBundleWidget::getName',
            'SalesProductConfiguration-SalesOrderItemConfigurationWriter::saveSalesOrderItemConfigurationsFromQuote',
            'SalesProductConfigurationWidget-ProductConfigurationOrderItemDisplayWidget::getName',
            'SalesProductConnector-OrderExpander::expandOrdersWithMetadata',
            'SalesQuantity-ItemQuantityValidator::isItemQuantitySplittable',
            'SalesQuantity-SalesQuantityFacade::isItemQuantitySplittable',
            'SalesReturn-OrderRemunerationTotalExpander::expandOrderTotalsWithRemunerationTotal',
            'SalesServicePointWidget-SalesServicePointNameForShipmentGroupWidget::getName',
            'SalesShipmentType-SalesShipmentTypeGrouper::getSalesShipmentTypeTransfersGroupedByKey',
            'SalesShipmentType-SalesShipmentTypeGrouper::getSalesShipmentTypeTransfersIndexedByName',
            'SecurityBlockerPage-SecurityBlockerAgentEventSubscriber::getSubscribedEvents',
            'SecurityBlockerPage-SecurityBlockerAgentEventSubscriber::onKernelRequest',
            'SecurityBlockerPage-SecurityBlockerCustomerEventSubscriber::getSubscribedEvents',
            'SecurityBlockerPage-SecurityBlockerCustomerEventSubscriber::onKernelRequest',
            'SequenceNumber-RandomNumberGenerator::generate',
            'ServicePointCart-QuoteItemServicePointValidator::validate',
            'ServicePointWidget-AddressFormChecker::hasShipmentTypes',
            'ServicePointWidget-AddressFormChecker::isApplicableForServicePointAddressStepFormHydration',
            'ServicePointWidget-AddressFormChecker::isBillingAddressTheSameAsShipping',
            'ServicePointWidget-AddressFormChecker::isDeliverToMultipleAddresses',
            'ServicePointWidget-AddressFormChecker::isShipmentTypeDelivery',
            'ServicePointWidget-ServicePointAddressExpander::expandShipmentsWithServicePointAddress',
            'ServicePointWidget-ServicePointFormPreSetDataHydrator::hydrate',
            'ServicePointWidget-ServicePointFormSubmitDataHydrator::hydrate',
            'ServicePointWidget-ServicePointFormValidator::validateSubmittedData',
            'ServicePointWidget-ServicePointNameForShipmentGroupWidget::getName',
            'ServicePointWidget-ServicePointNameForShipmentGroupWidget::getTemplate',
            'ServicePointWidget-ServicePointSearchWidget::getName',
            'SessionAgentValidation-SaveAgentSessionEventSubscriber::getSubscribedEvents',
            'SessionAgentValidation-SaveAgentSessionEventSubscriber::onLoginSuccess',
            'SessionAgentValidation-SecurityAuthenticationListenerFactoryTypeExpander::expand',
            'SessionAgentValidation-SessionAgentValidationSecurityExtender::extend',
            'SessionAgentValidation-SessionAgentValidationSessionUpdater::update',
            'SessionCustomerValidationPage-SaveCustomerSessionEventSubscriber::getSubscribedEvents',
            'SessionCustomerValidationPage-SessionCustomerValidationSecurityExtender::extend',
            'Session-SessionStorage::getOptions',
            'Session-SessionStorageOptions::getOptions',
            'Session-SessionStorage::getAndRegisterHandler',
            'Session-SessionStorageHandlerPool::getHandler',
            'Session-SaveSessionListener::getSubscribedEvents',
            'User-UserReader::getUserCollection',
            'UserLocale-UserLocaleFacade::expandUserCollectionWithLocale',
            'UserLocale-UserExpander::expandUserCollectionWithLocale',
            'Router-ControllerResolver::getControllerFromArray',
            'Router-ControllerResolver::injectContainerAndInitialize',
            'SharedCart-CustomerShareCartQuoteResponseExpander::expand',
            'SharedCart-QuoteActivator::setDefaultQuote',
            'SharedCart-QuoteCompanyUserWriter::updateQuoteCompanyUsers',
            'SharedCart-QuoteReader::findSharedQuoteCollectionBySharedQuoteCriteriaFilter',
            'SharedCart-QuoteShareDetailsQuoteResponseExpander::expand',
            'SharedCart-QuoteShareDetailsReader::getSharedCartDetails',
            'SharedCart-QuoteShareDetailsReader::getShareDetailsByIdQuote',
            'SharedCart-SharedCartFacade::getSharedCartDetails',
            'SharedCart-SharedCartFacade::getShareDetailsByIdQuote',
            'SharedCart-SharedCartMessenger::addDefaultSharedQuoteChangedMessage',
            'SharedCartWidget-CartDeleteSharingCompanyUsersListWidget::getName',
            'Shipment-ExpenseSanitizer::sanitizeExpenseSumValues',
            'Shipment-MethodAvailabilityChecker::isShipmentMethodAvailableForShipmentGroup',
            'Shipment-MethodDeliveryTimeReader::getDeliveryTimeForShippingGroup',
            'Shipment-MethodPriceReader::findShipmentGroupShippingPrice',
            'Shipment-MultiShipmentExpenseFilter::filterObsoleteShipmentExpenses',
            'Shipment-ShipmentExpenseCollectionRemover::removeExpenseByShipmentHash',
            'Shipment-ShipmentExpenseFilter::filterObsoleteShipmentExpenses',
            'Shipment-ShipmentTaxRateCalculator::recalculateByCalculableObject',
            'Shipment-ShipmentTotalCalculator::calculateShipmentTotal',
            'ShipmentCartConnector-ShipmentCartExpander::updateShipmentPrice',
            'ShipmentCartConnector-ShipmentCartValidator::validateShipment',
            'ShipmentCartConnector-ShipmentSanitizer::clearShipmentMethod',
            'ShipmentDiscountConnector-MethodDiscountDecisionRule::isExpenseSatisfiedBy',
            'ShipmentDiscountConnector-MultiShipmentCollectorStrategyResolver::resolveByTypeAndItems',
            'ShipmentDiscountConnector-ShipmentDiscountCollector::collect',
            'ShipmentDiscountConnector-ShipmentDiscountConnectorFacade::collectDiscountByShipmentMethod',
            'ShipmentType-ShipmentTypeFacade::getShipmentTypeCollection',
            'ShipmentType-ShipmentTypeReader::getShipmentTypeCollection',
            'ShipmentType-ShipmentTypeStoreRelationshipExpander::expandShipmentTypeCollectionWithStoreRelationships',
            'ShipmentTypeCart-ShipmentTypeCartFacade::expandCartChangeItemsWithShipmentType',
            'ShipmentTypeCart-ShipmentTypeCartFacade::expandQuoteItemsWithShipmentType',
            'ShipmentTypeCart-ShipmentTypeExpander::expandCartChangeItemsWithShipmentType',
            'ShipmentTypeCart-ShipmentTypeExpander::expandQuoteItemsWithShipmentType',
            'ShipmentTypeCart-ShipmentTypeReader::getActiveShipmentTypeCollection',
            'ShipmentTypeCart-ShipmentTypesHaveRelationWithShipmentMethodsCheckoutValidationRule::isQuoteReadyForCheckout',
            'ShipmentTypeWidget-AddressFormChecker::isApplicableForShipmentTypeAddressStepFormHydration',
            'ShipmentTypeWidget-AddressFormChecker::isDeliverToMultipleAddresses',
            'ShipmentTypeWidget-QuoteCleaner::cleanShipmentTypeUuidFromQuoteItems',
            'ShipmentTypeWidget-QuoteExpander::expandQuoteItemsWithShipmentType',
            'ShipmentTypeWidget-ShipmentTypeAddressFormWidget::getName',
            'ShipmentTypeWidget-ShipmentTypeAddressFormWidget::getTemplate',
            'ShipmentTypeWidget-ShipmentTypeFormOptionExpander::configureOptions',
            'ShipmentTypeWidget-ShipmentTypeFormPreSetDataHydrator::hydrate',
            'ShipmentTypeWidget-ShipmentTypeFormSubmitDataHydrator::hydrate',
            'ShopApplication-AbstractController::initialize',
            'ShopApplication-ShopApplicationTwigEventSubscriber::getSubscribedEvents',
            'ShopCmsSlot-CmsSlotDataProvider::getSlotContent',
            'ShoppingListNoteWidget-ShoppingListItemNoteWidget::getName',
            'ShoppingListPage-ShoppingListDismissWidget::getName',
            'ShoppingListWidget-AddItemsToShoppingListWidget::getName',
            'ShoppingListWidget-AddToShoppingListWidget::getName',
            'ShoppingListWidget-CreateShoppingListFromCartWidget::getName',
            'ShoppingListWidget-CreateShoppingListFromCartWidget::getTemplate',
            'ShoppingListWidget-ShoppingListMenuItemWidget::getName',
            'ShoppingListWidget-ShoppingListMenuItemWidget::getTemplate',
            'ShoppingListWidget-ShoppingListNavigationMenuWidget::getName',
            'ShoppingListWidget-ShoppingListNavigationMenuWidget::getTemplate',
            'ShoppingListWidget-ShoppingListSubtotalWidget::getName',
            'ShopUi-NumberFormatterTwigExtender::extend',
            'Stock-StockFacade::isProductAbstractNeverOutOfStockForStore',
            'Stock-StockProductReader::isProductAbstractNeverOutOfStockForStore',
            'Store-StoreFacade::isDynamicStoreEnabled',
            'StorageRouter-StorageUrlGenerator::generate',
            'StorageRouter-StorageUrlGenerator::getContext',
            'StorageRouter-StorageUrlGenerator::setContext',
            'Store-StoreReader::getStoreByName',
            'StoreWidget-StoreSwitcherWidget::getName',
            'StoreWidget-StoreSwitcherWidget::getTemplate',
            'Synchronization-ExporterPluginResolver::getAvailableResourceNames',
            'Synchronization-InMemoryMessageSynchronizer::addSynchronizationMessage',
            'Synchronization-InMemoryMessageSynchronizer::flushSynchronizationMessages',
            'Synchronization-SynchronizationFacade::addSynchronizationMessageToBuffer',
            'Synchronization-SynchronizationFacade::flushSynchronizationMessagesFromBuffer',
            'TabsWidget-FullTextSearchTabsWidget::getName',
            'Tax-AccruedTaxCalculator::getTaxValueFromPrice',
            'Tax-PriceCalculationHelper::getTaxValueFromPrice',
            'Tax-TaxAmountAfterCancellationCalculator::recalculate',
            'Tax-TaxAmountCalculator::recalculate',
            'Tax-TaxFacade::calculateTaxRateAverageAggregation',
            'Tax-TaxRateAverageAggregator::recalculate',
            'TaxProductConnector-ProductAbstractTaxSetExpander::expand',
            'TaxProductConnector-ProductAbstractTaxWriter::saveTaxSetToProductAbstract',
            'TaxProductConnector-TaxProductConnectorFacade::expandProductAbstract',
            'User-SecurityServiceExtender::extend',
            'User-UserFacade::getCurrentUser',
            'User-UserFacade::hasCurrentUser',
            'User-UserFacade::isSystemUser',
            'WishlistWidget-WishlistMenuItemWidget::getName',
            'WishlistWidget-WishlistMenuItemWidget::getTemplate',
            'ZedRequest-AbstractObject::fromArray',
            'ZedRequest-AbstractObject::toArray',
            'ZedRequest-AbstractRequest::addMetaTransfer',
            'ZedRequest-AbstractRequest::getMetaTransfer',
            'ZedRequest-AbstractRequest::getTransfer',
            'ZedRequest-AbstractRequest::setHost',
            'ZedRequest-AbstractRequest::setSessionId',
            'ZedRequest-AbstractRequest::setTime',
            'ZedRequest-AbstractRequest::setTransfer',
            'ZedRequest-AbstractResponse::addErrorMessages',
            'ZedRequest-AbstractResponse::addInfoMessage',
            'ZedRequest-AbstractResponse::addInfoMessages',
            'ZedRequest-AbstractResponse::addSuccessMessage',
            'ZedRequest-AbstractResponse::addSuccessMessages',
            'ZedRequest-AbstractResponse::fromArray',
            'ZedRequest-AbstractResponse::getErrorMessages',
            'ZedRequest-AbstractResponse::getInfoMessages',
            'ZedRequest-AbstractResponse::getSuccessMessages',
            'ZedRequest-AbstractResponse::getTransfer',
            'ZedRequest-AbstractResponse::setSuccess',
            'ZedRequest-AbstractZedClient::addMetaTransfer',
            'ZedRequest-AbstractZedClient::getErrorStatusMessages',
            'ZedRequest-AbstractZedClient::getInfoStatusMessages',
            'ZedRequest-AbstractZedClient::getLastResponse',
            'ZedRequest-AbstractZedClient::getSuccessStatusMessages',
            'ZedRequest-AbstractZedClient::hasLastResponse',
            'ZedRequest-HandlerStackContainer::getHandlerStack',
            'ZedRequest-LoggableZedClient::addMetaTransfer',
            'ZedRequest-LoggableZedClient::getErrorStatusMessages',
            'ZedRequest-LoggableZedClient::getInfoStatusMessages',
            'ZedRequest-LoggableZedClient::getLastResponse',
            'ZedRequest-LoggableZedClient::getSuccessStatusMessages',
            'ZedRequest-LoggableZedClient::hasLastResponse',
            'ZedRequest-ZedRequestInMemoryLogger::log',
        ];
    }

    /**
     * Specification:
     * - Returns the list of paths that should be instrumented.
     *
     * @api
     *
     * @return array<string>
     */
    public function getPathPatterns(): array
    {
        return [
            '#^vendor/spryker/[^/]+/.*/.*/(Zed|Shared)/.*/(?!Persistence|Presentation)[^/]+/.*#',
            '#^vendor/spryker/[^/]+/Glue.*#',
            '#^vendor/spryker(?:/spryker)?-shop/[^/]+/.*#',
            '#^vendor/spryker-eco/[^/]+/.*#',
            '#^src/Pyz/.*#',
        ];
    }

    /**
     * Specification:
     * - Returns the output directory for generated hooks.
     *
     * @api
     *
     * @return string
     */
    public function getOutputDir(): string
    {
        return SharedOpentelemetryConfig::getHooksDir();
    }

    /**
     * Specification:
     * - Set to false if you want to instrument all methods, including private and protected ones.
     *
     * @api
     *
     * @return bool
     */
    public function areOnlyPublicMethodsInstrumented(): bool
    {
        return true;
    }

    /**
     * Specification:
     * - List of class names or part of class names that should be considered as critical.
     * - Critical classes will generate hooks that are marked as critical and will be process with more prio to show.
     *
     * @api
     *
     * @return array<string>
     */
    public function getCriticalClassNamePatterns(): array
    {
        return [
            'Facade',
            'Controller',
        ];
    }
}
